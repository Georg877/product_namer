"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã Product Namer Agent.
"""
from agent import ProductNamerAgent
import json


def test_with_description():
    """–¢–µ—Å—Ç —Å –ø—Ä—è–º—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞."""
    print("üß™ –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è")
    print("=" * 50)
    
    agent = ProductNamerAgent()
    
    # –ü—Ä–∏–º–µ—Ä –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
    description = """
    –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º, –æ—Å–Ω–∞—â–µ–Ω–Ω—ã–π 
    –ø–µ—Ä–µ–¥–æ–≤–æ–π –∫–∞–º–µ—Ä–æ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. 
    –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–º–µ–µ—Ç —É–ª—å—Ç—Ä–∞—Ç–æ–Ω–∫–∏–π –¥–∏–∑–∞–π–Ω, –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –æ—Ç –≤–æ–¥—ã –∏ –ø—ã–ª–∏, 
    —Å –±–∞—Ç–∞—Ä–µ–µ–π, —Ä–∞–±–æ—Ç–∞—é—â–µ–π –¥–æ 48 —á–∞—Å–æ–≤ –±–µ–∑ –ø–æ–¥–∑–∞—Ä—è–¥–∫–∏. 
    –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 15 —è–∑—ã–∫–æ–≤ 
    –∏ —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π.
    """
    
    try:
        names = agent.generate_names_from_description(description)
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è:")
        print()
        
        for i, name_data in enumerate(names, 1):
            print(f"üì± {i}. {name_data['name']}")
            print(f"   üí° {name_data['reason']}")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def test_with_url():
    """–¢–µ—Å—Ç —Å URL (—Ç—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π URL)."""
    print("üß™ –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –∏–∑ URL")
    print("=" * 50)
    
    agent = ProductNamerAgent()
    
    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞
    test_url = "https://example.com/product-page"
    
    print(f"‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –∑–∞–º–µ–Ω–∏—Ç–µ URL –Ω–∞ –¥–µ–π—Å—Ç–≤—É—é—â–∏–π")
    print(f"üìÑ –¢–µ–∫—É—â–∏–π URL: {test_url}")
    print()
    
    try:
        names = agent.generate_names_from_url(test_url)
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è:")
        print()
        
        for i, name_data in enumerate(names, 1):
            print(f"üì± {i}. {name_data['name']}")
            print(f"   üí° {name_data['reason']}")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üí° –≠—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ URL")


def save_results_to_file(names, filename="generated_names.json"):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ JSON —Ñ–∞–π–ª."""
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(names, f, ensure_ascii=False, indent=2)
        print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ Product Namer Agent - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("=" * 60)
    print()
    
    # –¢–µ—Å—Ç 1: –° –æ–ø–∏—Å–∞–Ω–∏–µ–º
    test_with_description()
    
    print()
    print("-" * 60)
    print()
    
    # –¢–µ—Å—Ç 2: –° URL
    test_with_url()
    
    print()
    print("=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print()
    print("üí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ URL:")
    print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("   2. –ó–∞–º–µ–Ω–∏—Ç–µ test_url –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –ø—Ä–æ–¥—É–∫—Ç–∞")
    print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")


if __name__ == "__main__":
    main() 